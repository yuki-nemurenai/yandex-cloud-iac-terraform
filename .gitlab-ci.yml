---

variables:
  TF_DIR: ${CI_PROJECT_DIR} 
  STATE_NAME: "tf_state"          
  ADDRESS: "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/terraform/state/${STATE_NAME}" #Change your Gitlab instance

stages:
  - validate
  - plan
  - apply
  - post-apply
  - destroy

default:
  image: 
    name: hashicorp/terraform:1.3.9
    entrypoint: [""]
  before_script:
    - terraform --version
    - export GITLAB_ACCESS_TOKEN=$TOKEN
    - cd ${TF_DIR} 
    - |-
      cat <<EOF > ~/.terraformrc
      provider_installation {
        network_mirror {
          url = "https://terraform-mirror.yandexcloud.net/"
          include = ["registry.terraform.io/*/*"]
        }
        direct {
          exclude = ["registry.terraform.io/*/*"]
        }
      }
      EOF
    - terraform init  -reconfigure
        -backend-config="address=${ADDRESS}" 
        -backend-config="lock_address=${ADDRESS}/lock"
        -backend-config="unlock_address=${ADDRESS}/lock"
        -backend-config="username=$USERNAME"
        -backend-config="password=$GITLAB_ACCESS_TOKEN"
        -backend-config="lock_method=POST"
        -backend-config="unlock_method=DELETE"
        -backend-config="retry_wait_min=5"
  cache:
    key: terraform
    paths:
      - .terraform

validate:
  stage: validate
  script:
    - terraform validate
    - terraform fmt -check -recursive

plan:
  stage: plan
  script:
    - terraform plan
  dependencies:              
    - validate

apply:
  stage: apply
  script:
    - terraform apply -auto-approve
  dependencies:              
    - plan

install-nginx-ingress:
  stage: post-apply
  image: centosadmin/kubernetes-helm:v3.6.3
  before_script:
    - >
      curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh |
      bash
    - export PATH=$PATH:/root/yandex-cloud/bin
    - yc config profile create cicd
    - yc config set folder-id $YC_FOLDER_ID
    - yc config set cloud-id $YC_CLOUD_ID
    - yc config set token $YC_TOKEN
    - >
      yc managed-kubernetes cluster
      get-credentials $K8S_CLUSTER_NAME --external
    - kubectl cluster-info
  script:
    - helm upgrade --install ingress-nginx ingress-nginx
        --repo https://kubernetes.github.io/ingress-nginx
        --namespace ingress-nginx
        --create-namespace
        --set controller.replicaCount=2
    - helm upgrade --install cert-manager cert-manager
        --repo https://charts.jetstack.io
        --namespace cert-manager
        --create-namespace
        --set installCRDs=true
  dependencies:
    - apply

destroy:
  stage: destroy
  script:
    - terraform destroy -auto-approve
  dependencies:          
    - plan
    - apply
  when: manual
